---
title: "Exploring the Relationship Between Seafood Consumption and Life Expectancy"
author: "Amaya McMillin, Ashley Fong, Constantine Golematis, Rayne Lejano"
format: html
editor: visual
embed-resources: true
code-tools: true
code-fold: true
---

# 1 Project Proposal & Data

**Data:**

```{r, include = FALSE}
library(tidyverse)
library(gganimate)
library(glue)
library(gifski)
library(broom)
library(kableExtra)
library(knitr)

seafood <- read_csv("fisfod_cons_pc.csv")
lex <- read_csv("lex.csv")
```

### Exploring the Relationship Between Seafood Consumption and Life Expectancy

#### Data Sources

This analysis examines two datasets from Gapminder: life expectancy at birth and fish and seafood consumption per capita. Gapminder, an independent foundation, compiles data from multiple sources, filling gaps to create comprehensive historical datasets. Notably, the country variable in both datasets reflects current geopolitical boundaries.

#### Life Expectancy Dataset

This dataset provides the expected lifespan of a newborn based on birth year and country. It spans from 1800 to 2100, covering 196 countries.

#### Fish and Seafood Consumption Dataset

This dataset records the average annual per capita availability of fish and seafood (in kilograms), accounting for imports and domestic production while excluding exports, animal feed, and distribution losses. While this measure reflects overall supply rather than direct consumption, it offers a useful proxy. The dataset spans from 1961 to 2018 and includes 170 countries.

#### Hypothesis

We hypothesize that higher seafood consumption is positively correlated with life expectancy. Seafood is associated with numerous health benefits, including improved cognitive function and cardiovascular health. By analyzing these datasets, we aim to determine whether increased seafood consumption aligns with longer lifespans across countries.

## 1.1 Data Cleaning

Many values in both datasets are recorded as N/A, which could hinder our ability to conduct a thorough analysis. To address this issue and maintain data integrity, we have chosen to replace these missing values with the average of their respective rows. This approach ensures that each data point remains as representative as possible while minimizing potential biases introduced by missing values. By using row averages, we preserve the overall structure of the data while allowing for meaningful comparisons across observations.

```{r}
lex[-1] <- lex[-1] |>
  mutate(across(everything(), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))

seafood[-1] <- seafood[-1] |>
  mutate(across(everything(), ~ ifelse(is.na(.), mean(., na.rm = TRUE), .)))
```

## 1.2 Pivoting Longer

To successfully merge the two datasets, we must first convert them from a wide format to a long format. In their current structure, each dataset contains a single column for the country, while the remaining columns correspond to different years. If we were to attempt a direct join in this wide format, we would end up with multiple columns for each year---one from each dataset---making it challenging to distinguish which values belong to which dataset.

By pivoting the datasets to a long format, we restructure the data so that instead of having separate columns for each year, we create two columns: one for the year and another for the corresponding value (either life expectancy or seafood consumption). This transformation standardizes the structure of both datasets, allowing for a clean and efficient merge based on country and year. As a result, each row will uniquely represent a specific country-year combination, with separate columns indicating life expectancy and seafood consumption, facilitating a clearer and more interpretable analysis.

```{r}
life_expectancy_long <- lex |>
  pivot_longer(cols = -country,
               names_to = 'year',
               values_to = 'life_expectancy') |>
  mutate(year = as.factor(year))

seafood_long <- seafood |>
  pivot_longer(cols = -country, 
               names_to = 'year',
               values_to = 'kg_seafood') |>
  mutate(year = as.factor(year))
```

## 1.3 Joining Data

Now that we have transformed both datasets into a long format, we can proceed with merging them to perform our analysis. To ensure consistency, we will use an inner join, which retains only the observations that appear in both datasets.

The life expectancy dataset spans from 1800 to 2100, while the seafood consumption dataset covers the years 1961 to 2018. Since these datasets have different time ranges, an inner join ensures that we only analyze data for years that are present in both datasets---specifically, the period from 1961 to 2018. This approach prevents us from introducing missing values into our analysis and ensures that every observation contains both life expectancy and seafood consumption data.

By merging the datasets in this manner, we create a refined dataset where each row represents a unique country-year combination, with corresponding values for both variables. This standardized structure allows us to effectively explore the relationship between seafood consumption and life expectancy across different countries and time periods.

```{r}
full_data <- life_expectancy_long |>
  inner_join(seafood_long, by = c('country', 'year'))
```

# 2 Linear Regression

## 2.1 Data Visualization

In this section, we aim to visualize the relationship between our variables.

Below is a graph that shows the relationship between seafood consumption in kg and life expectancy in years for data from different countries and years.

```{r}
full_data |>
  ggplot(aes(x = kg_seafood,
             y = life_expectancy)) +
  geom_point() + 
  geom_smooth(method = "lm") +
  labs(x = "Seafood Consumption (kg)",
       y = NULL,
       subtitle = "Life Expectancy (years)",
       title = "Relationship between seafood consumption and life expectancy")
```

This visualization suggests that there is a positive correlation between country's seafood consumption and their resident's life expectancy. However, the scatterplot reveals that there is a lot of variability in the data as higher seafood consumption often results in moderate life expectancy.

Below is an animation showing the relationship between seafood consumption and life expectancy for different countries year by year.

```{r}
# RUNNING THIS CHUNK WILL MAKE A LOT OF IMAGES

full_data <- full_data |>
  mutate(year_numeric = as.integer(as.character(year)))

full_data |>
  ggplot(aes(x = kg_seafood,
             y = life_expectancy)) +
  geom_point() + 
  labs(x = "Seafood Consumption (kg)",
       y = "Life Expectancy (years)",
       subtitle = 'Year: {frame_time}',
       title = "Relationship between seafood consumption and life expectancy") +
  transition_time(year_numeric) +
  ease_aes('linear')
```

This animated visualization explores this relationship year-by-year and the changes that occur. In the animation, we can see that life expectancy consistently increases each year -- this is largely due to overall health improvements worldwide as time goes on. Additionally, the amount of seafood consumption also increases intermittently.

## 2.2 Linear Regression

For our regression, we want to regress life expectancy (response variable **y**) on seafood consumption (explanatory variable **x**). In order to create our linear regression, we must first make it so that we have one x value and one y value per country. This was done below by creating a new dataset, **full_data_avg**, where we took the average of life_expectancy and kg_seafood after grouping by country (since we want a single average for each country, essentially condensing the multiple observations for each country into one).

```{r}
full_data_avg <- full_data |>
  group_by(country) |>
  summarize(avg_life_expectancy = mean(life_expectancy),
            avg_seafood_consumption = mean(kg_seafood))

life_expectancy_lm <- lm(avg_life_expectancy ~ avg_seafood_consumption, data = full_data_avg)

broom::tidy(life_expectancy_lm)
```

Using this new dataset, we were able to create our linear model. This model tells us that a country with zero seafood consumption will have a life expectancy of 63.27 years on average. For each one kg increase in seafood consumption, life expectancy will rise by 0.15 years on average.

## 2.3 Model Fit

In order to see how well the model assesses our data, we must take a look at the full summary statistics of the model.

```{r}
summary(life_expectancy_lm)
```

Based on the summary statistics, we can see that the model has an R squared of 0.0755, which tells us the model accounts for only 7% of the variability in our response variable. Although the P-value for our explanatory variable is extremely small (telling us it is significant), the low R squared tells us other variables may have a much more significant impact on variability in life expectancy.

In order to create a valid linear model, we must verify the data is linear. The graph below uses the full_data_avg dataset to create a simple scatterplot. Based on the scatterplot, the data looks relatively linear.

```{r}
#Scatterplot to check if data is linear

full_data_avg |>
  ggplot(aes(x = avg_seafood_consumption,
             y = avg_life_expectancy)) +
  geom_point()
```

Another element needed for our linear model to be valid is equal variance. Below is a residuals vs. fitted plot. The points have equal variance, telling us the model is valid.

```{r}
#Residuals vs fitted plot

life_expectancy_lm |> 
  augment() |> 
  ggplot(aes(x = .fitted, y = .resid)) +
  geom_point() +
  geom_hline(yintercept = 0, linetype = "dashed", 
             color = "red", lwd = 1.5)
```

Below is a table that summarizes the variance of response, fitted values, and residuals which gives us information on the model's effectiveness.

```{r}
var_response <- var(full_data_avg$avg_life_expectancy)
var_fitted <- var(fitted(life_expectancy_lm))
var_residuals <- var(residuals(life_expectancy_lm))

variance_table <- data.frame(
  Metric = c("Variance of Response", "Variance of Fitted Values", "Variance of Residuals"),
  Variance = c(var_response, var_fitted, var_residuals))


variance_table |>
  kable(caption = "Model Fit Metrics",
        "html", 
        digits = 3, 
        col.names = c("Metric", "Variance")) |>
  kable_styling(full_width = FALSE, 
                bootstrap_options = c("striped", "hover"))
```

From our table, we can see that the variance of response is 71.64 and of that, only 5.41 is explained by our explanatory variable. The remaining 66.23 from the variance of residuals represents what is not being explained by seafood consumption. Since the variance of residuals is significantly greater than the variance of fitted values, this suggests that seafood consumption alone does not adequetely explain the differences in life expectancy across countries.

# 3 Simulation

## 3.1 Visualizing Simulations from the Model

In this section, we want to test the effectiveness of our fit model by seeing if the model provides an accurate representation of our observed data. To begin our predictive checks, we must first generate predictions using our linear model.

```{r}
pred_life_expectancy <- predict(life_expectancy_lm)
```

Now that we have our predicted data using our linear model made from our observed data, we must now add random error to the predictions.

```{r}
est_sigma <- sigma(life_expectancy_lm)
```

We can now create a function that will add the normal random error to our predictions.

```{r}
#Function found in Chapter 10 reading

rand_error <- function(x, mean = 0, sd){
  
   x + rnorm(length(x), 
            mean, 
            sd)
}

sim_response <- tibble(sim_life_expect = rand_error(pred_life_expectancy,
                                            sd = est_sigma))
```

We now have a dataset containing simulated values! To make an accurate comparison, we can merge this dataset with our original data.

```{r}
comparison_data <- full_data_avg |> 
  select(avg_life_expectancy, avg_seafood_consumption) |> 
  bind_cols(sim_response)
```

Using this data, we can create two side-by-side plots that will show us how

```{r}
#| layout-ncol: 2
#| fig-cap: 
#|   - "Plot of Observed Data"
#|   - "Plot of Simulated Data"

observed_plot <- comparison_data |>
  ggplot(aes(x = avg_seafood_consumption,
             y = avg_life_expectancy)) +
  geom_point() + 
  geom_smooth(method = "lm") +
  labs(x = "Avg. Seafood Consumption (kg)",
       y = NULL,
       subtitle = "Avg. Life Expectancy (years)",
       title = "Relationship between seafood consumption and life expectancy")

simulated_plot <- comparison_data |>
  ggplot(aes(x = avg_seafood_consumption,
             y = sim_life_expect)) +
  geom_point() + 
  geom_smooth(method = "lm") +
  labs(x = "Avg. Seafood Consumption (kg)",
       y = NULL,
       subtitle = "Avg. Simulated Life Expectancy (years)",
       title = "Relationship between seafood consumption and simulated life expectancy")

plot(observed_plot)
plot(simulated_plot)


```

The datapoints in the simulated data appear to be a lot more dispersed and have a lot more variation compared to the observed data on the left, which has a lot more clustering. There are a few more high outliers on the y-axis in the simulated data compared to the observed data as well.

## 3.2 Generating Multiple Predictive Checks
